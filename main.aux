\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand*{\memsetcounter}[2]{}
\abx@aux@sortscheme{none}
\abx@aux@refcontext{none/global/}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lof}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lot}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\select@language{english}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\select@language{english}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10pt}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10pt}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\chapternumberline {1}Methods}{1}{chapter.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.1}Symmetricity and normalization of tensors}{1}{section.1.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.2}Boundary conditions}{2}{section.1.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.3}Convergence criteria}{2}{section.1.3}}
\newlabel{sec:convergence_criteria}{{\M@TitleReference {1.3}{Convergence criteria}}{2}{Convergence criteria}{section.1.3}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.1}Simulations with finite bond dimension}{2}{subsection.1.3.1}}
\newlabel{sec:simulations_with_finite_bond_dimension}{{\M@TitleReference {1.3.1}{Simulations with finite bond dimension}}{2}{Simulations with finite bond dimension}{subsection.1.3.1}{}}
\newlabel{eq:convergence}{{1.2}{2}{Simulations with finite bond dimension}{equation.1.3.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1.1}Convergence at the critical point of the Ising model}{2}{subsubsection.1.3.1.1}}
\newlabel{eq:convergence_vs_n_semilogarithmic_law}{{1.4}{2}{Convergence at the critical point of the Ising model}{equation.1.3.4}{}}
\expandafter \gdef \csname pgfplots@legend@to@name@grouplegend\endcsname {\begingroup \def \pgfplots@legend@to@name {\pgfkeysdef {/pgfplots/every axis legend}{\pgfkeysalso {cells={anchor=center},inner xsep={3pt},inner ysep={2pt},nodes={inner sep=2pt,text depth=0.15em},anchor={north east},shape={rectangle},fill={white},draw={black},at={(0.98,0.98)}}}\pgfkeysdef {/pgfplots/every legend image post}{}\def \numplots {8}\def \plotnum {0}\def \plotnumofactualtype {0}\matrix [/pgfplots/every axis legend]{\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific1={\pgfkeysnovalue },mark={o},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 10$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific3={\pgfkeysnovalue },mark={triangle},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 30$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific5={\pgfkeysnovalue },mark={pentagon},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 60$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific7={\pgfkeysnovalue },mark={plus},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 100$};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific2={\pgfkeysnovalue },mark={square},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 20$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific4={\pgfkeysnovalue },mark={diamond},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 40$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific6={\pgfkeysnovalue },mark={x},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 80$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific8={\pgfkeysnovalue },mark={asterisk},/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$m = 120$};\\};}\ifpgfpicture \pgfplots@legend@to@name \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz [/pgfplots/every legend to name picture/.try]{\pgfplots@legend@to@name }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup }
\newlabel{eq:abs_rel_diff}{{1.5}{3}{Convergence at the critical point of the Ising model}{equation.1.3.5}{}}
\newlabel{eq:abs_rel_diff_vs_n_semilogarithmic_law}{{1.6}{3}{Convergence at the critical point of the Ising model}{equation.1.3.6}{}}
\newlabel{eq:stepwise_difference_epsilon}{{1.7}{3}{Convergence at the critical point of the Ising model}{equation.1.3.7}{}}
\newlabel{eq:stepwise_difference_linear}{{1.8}{3}{Convergence at the critical point of the Ising model}{equation.1.3.8}{}}
\newlabel{eq:stepwise_difference_quadratic}{{1.9}{3}{Convergence at the critical point of the Ising model}{equation.1.3.9}{}}
\newlabel{eq:extrapolation_fully_converged_limit_finite_m}{{1.10}{3}{Convergence at the critical point of the Ising model}{equation.1.3.10}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.2}Simulations with finite system size}{3}{subsection.1.3.2}}
\newlabel{sec:simulations_with_finite_system_size}{{\M@TitleReference {1.3.2}{Simulations with finite system size}}{3}{Simulations with finite system size}{subsection.1.3.2}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Convergence as defined in \autoref  {eq:convergence} versus $n$, the number of CTMRG steps. Up until very small values of $c_n$, the convergence is monotonically decreasing and obeys a logarithmic law with slope depending on $m$.\relax }}{4}{figure.caption.1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:convergence_vs_n}{{\M@TitleReference {1.1}{Convergence as defined in \autoref  {eq:convergence} versus $n$, the number of CTMRG steps. Up until very small values of $c_n$, the convergence is monotonically decreasing and obeys a logarithmic law with slope depending on $m$.\relax }}{4}{Convergence as defined in \autoref {eq:convergence} versus $n$, the number of CTMRG steps. Up until very small values of $c_n$, the convergence is monotonically decreasing and obeys a logarithmic law with slope depending on $m$.\relax }{figure.caption.1}{}}
\newlabel{eq:abs_rel_diff_quantity_m}{{1.11}{4}{Simulations with finite system size}{equation.1.3.11}{}}
\newlabel{eq:abs_rel_diff_power_law_m}{{1.12}{4}{Simulations with finite system size}{equation.1.3.12}{}}
\newlabel{eq:delta_q_step_finite_N}{{1.13}{4}{Simulations with finite system size}{equation.1.3.13}{}}
\abx@aux@cite{okunishi1999universal}
\abx@aux@segm{0}{0}{okunishi1999universal}
\abx@aux@cite{davies1988corner}
\abx@aux@segm{0}{0}{davies1988corner}
\abx@aux@cite{peschel2009reduced}
\abx@aux@segm{0}{0}{peschel2009reduced}
\abx@aux@segm{0}{0}{okunishi1999universal}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Absolute value of relative difference of quantities (see \autoref  {eq:abs_rel_diff}). Same legend as \autoref  {fig:convergence_vs_n}.\relax }}{5}{figure.caption.2}}
\newlabel{fig:convergence_finite_chi}{{\M@TitleReference {1.2}{Absolute value of relative difference of quantities (see \autoref  {eq:abs_rel_diff}). Same legend as \autoref  {fig:convergence_vs_n}.\relax }}{5}{Absolute value of relative difference of quantities (see \autoref {eq:abs_rel_diff}). Same legend as \autoref {fig:convergence_vs_n}.\relax }{figure.caption.2}{}}
\newlabel{grouplegend}{{\M@TitleReference {\expandafter\protect\csname pgfplots@legend@to@name@grouplegend\endcsname}{Convergence at the critical point of the Ising model}}{6}{Convergence at the critical point of the Ising model}{pgfplotslink.1.3.0}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces Stepwise differences upon decreasing the threshold $\epsilon $ by an order of magnitude, as in \autoref  {eq:stepwise_difference_epsilon}. For the order parameter, entropy and correlation length, a linear relationship holds to high precision, while for the free energy the relationship is quadratic.\relax }}{6}{figure.caption.3}}
\newlabel{fig:stepwise_diffs_vs_tolerance}{{\M@TitleReference {1.3}{Stepwise differences upon decreasing the threshold $\epsilon $ by an order of magnitude, as in \autoref  {eq:stepwise_difference_epsilon}. For the order parameter, entropy and correlation length, a linear relationship holds to high precision, while for the free energy the relationship is quadratic.\relax }}{6}{Stepwise differences upon decreasing the threshold $\epsilon $ by an order of magnitude, as in \autoref {eq:stepwise_difference_epsilon}. For the order parameter, entropy and correlation length, a linear relationship holds to high precision, while for the free energy the relationship is quadratic.\relax }{figure.caption.3}{}}
\expandafter \gdef \csname pgfplots@legend@to@name@grouplegend\endcsname {\begingroup \def \pgfplots@legend@to@name {\pgfkeysdef {/pgfplots/every axis legend}{\pgfkeysalso {cells={anchor=center},inner xsep={3pt},inner ysep={2pt},nodes={inner sep=2pt,text depth=0.15em},anchor={north east},shape={rectangle},fill={white},draw={black},at={(0.98,0.98)}}}\pgfkeysdef {/pgfplots/every legend image post}{}\def \numplots {4}\def \plotnum {0}\def \plotnumofactualtype {0}\matrix [/pgfplots/every axis legend]{\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific1={\pgfkeysnovalue },mark={o},mark={none},thick={\pgfkeysnovalue },/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$n = 200$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific3={\pgfkeysnovalue },mark={triangle},mark={none},thick={\pgfkeysnovalue },/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$n = 1000$};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific2={\pgfkeysnovalue },mark={square},mark={none},thick={\pgfkeysnovalue },/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$n = 600$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {scientific4={\pgfkeysnovalue },mark={diamond},mark={none},thick={\pgfkeysnovalue },/tikz/raw gnuplot={true}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$n = 2200$};\\};}\ifpgfpicture \pgfplots@legend@to@name \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz [/pgfplots/every legend to name picture/.try]{\pgfplots@legend@to@name }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup }
\newlabel{eq:m_values_all_degenerate_basis_states}{{1.15}{7}{Simulations with finite system size}{equation.1.3.15}{}}
\newlabel{eq:extrapolation_finite_N}{{1.16}{7}{Simulations with finite system size}{equation.1.3.16}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.4}Values of hyperparameters for the Ising model}{7}{section.1.4}}
\newlabel{grouplegend}{{\M@TitleReference {\expandafter\protect\csname pgfplots@legend@to@name@grouplegend\endcsname}{Simulations with finite system size}}{8}{Simulations with finite system size}{pgfplotslink.1.3.1}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces The absolute value of the relative difference of quantities, as defined in \autoref  {eq:abs_rel_diff_quantity_m}. For high enough $m$, it obeys a power law with varying exponent $\alpha (N)$. The sharp drop for the highest values of $m$ is an artefact of the definition of $\Delta Q_{\text  {rel}}$ and the plateau-like fashion in which the value of a quantity converges, owing to the spectrum of the reduced density matrix approximated by the CTMRG algorithm. Like in the finite-$m$ case, the free energy converges much faster than the other quantities, and does so with little $n$-dependence. Note that $\Delta \xi _{\text  {rel}}$ does not obey a power law.\relax }}{8}{figure.caption.4}}
\newlabel{fig:quantities_vs_chi}{{\M@TitleReference {1.4}{The absolute value of the relative difference of quantities, as defined in \autoref  {eq:abs_rel_diff_quantity_m}. For high enough $m$, it obeys a power law with varying exponent $\alpha (N)$. The sharp drop for the highest values of $m$ is an artefact of the definition of $\Delta Q_{\text  {rel}}$ and the plateau-like fashion in which the value of a quantity converges, owing to the spectrum of the reduced density matrix approximated by the CTMRG algorithm. Like in the finite-$m$ case, the free energy converges much faster than the other quantities, and does so with little $n$-dependence. Note that $\Delta \xi _{\text  {rel}}$ does not obey a power law.\relax }}{8}{The absolute value of the relative difference of quantities, as defined in \autoref {eq:abs_rel_diff_quantity_m}. For high enough $m$, it obeys a power law with varying exponent $\alpha (N)$. The sharp drop for the highest values of $m$ is an artefact of the definition of $\Delta Q_{\text {rel}}$ and the plateau-like fashion in which the value of a quantity converges, owing to the spectrum of the reduced density matrix approximated by the CTMRG algorithm. Like in the finite-$m$ case, the free energy converges much faster than the other quantities, and does so with little $n$-dependence. Note that $\Delta \xi _{\text {rel}}$ does not obey a power law.\relax }{figure.caption.4}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces Same legend as \autoref  {fig:quantities_vs_chi}\relax }}{9}{figure.caption.5}}
\newlabel{fig:stepwise_diffs_vs_m}{{\M@TitleReference {1.5}{Same legend as \autoref  {fig:quantities_vs_chi}\relax }}{9}{Same legend as \autoref {fig:quantities_vs_chi}\relax }{figure.caption.5}{}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {1.1}{\ignorespaces Relative errors of $\xi (T_c, m, \epsilon )$, as compared with the fully converged limit $\epsilon \to 0$, approximated by \autoref  {eq:extrapolation_fully_converged_limit_finite_m}.\relax }}{9}{table.caption.6}}
\newlabel{table:rel_error_correlation_length_finite_m_T_crit}{{\M@TitleReference {1.1}{Relative errors of $\xi (T_c, m, \epsilon )$, as compared with the fully converged limit $\epsilon \to 0$, approximated by \autoref  {eq:extrapolation_fully_converged_limit_finite_m}.\relax }}{9}{Relative errors of $\xi (T_c, m, \epsilon )$, as compared with the fully converged limit $\epsilon \to 0$, approximated by \autoref {eq:extrapolation_fully_converged_limit_finite_m}.\relax }{table.caption.6}{}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\contentsline {table}{\numberline {1.2}{\ignorespaces Relative errors of $M(T_c, n)$, calculated such that the truncation error $P_r$ does not exceed listed threshold, as compared with the fully converged limit of $m \to \infty $ (zero truncation error), approximated by \autoref  {eq:extrapolation_finite_N}. The number in brackets is the value of $m$ used. To approximate the error, steps in $m$-value of 5, 10 or 20 were used, depending on $m_{\text  {max}}$.\relax }}{9}{table.caption.7}}
\newlabel{table:rel_error_order_param_finite_N_T_crit}{{\M@TitleReference {1.2}{Relative errors of $M(T_c, n)$, calculated such that the truncation error $P_r$ does not exceed listed threshold, as compared with the fully converged limit of $m \to \infty $ (zero truncation error), approximated by \autoref  {eq:extrapolation_finite_N}. The number in brackets is the value of $m$ used. To approximate the error, steps in $m$-value of 5, 10 or 20 were used, depending on $m_{\text  {max}}$.\relax }}{9}{Relative errors of $M(T_c, n)$, calculated such that the truncation error $P_r$ does not exceed listed threshold, as compared with the fully converged limit of $m \to \infty $ (zero truncation error), approximated by \autoref {eq:extrapolation_finite_N}. The number in brackets is the value of $m$ used. To approximate the error, steps in $m$-value of 5, 10 or 20 were used, depending on $m_{\text {max}}$.\relax }{table.caption.7}{}}
\abx@aux@refcontextdefaultsdone
\abx@aux@defaultrefcontext{0}{okunishi1999universal}{none/global/}
\abx@aux@defaultrefcontext{0}{davies1988corner}{none/global/}
\abx@aux@defaultrefcontext{0}{peschel2009reduced}{none/global/}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{Bibliography}{10}{section*.9}}
\memsetcounter{lastsheet}{11}
\memsetcounter{lastpage}{10}
